##########################################################################################
# Automations
##########################################################################################

# automation:
  - alias: 'Theme change Current Theme'
    id: 'Change Current Theme'
#    initial_state: false
    trigger:
      platform: state
      entity_id: input_select.theme
    action:
      service: frontend.set_theme
      data_template:
        name: >
          {{states('input_select.theme')}}

  - alias: 'Theme change Sun based'
    id: 'Sun based theme change'
#    initial_state: false
    trigger:
      - platform: homeassistant
        event: start
#      - platform: state
#        entity_id: input_select.set_sunset_theme
#      - platform: state
#        entity_id: input_select.set_sunrise_theme
      - platform: state
        entity_id: sensor.sun_based_theme
#      - platform: sun
#        event: sunrise
#      - platform: sun
#        event: sunset
#      - platform: state
#        entity_id: sun.sun
#        to: above_horizon
#      - platform: state
#        entity_id: sun.sun
#        to: below_horizon
    condition: []
    action:
#      - delay:
#          seconds: 3

# TODO: debug service_template
#         for details see:
#           https://www.home-assistant.io/docs/scripts/service-calls/#use-templates-to-decide-which-service-to-call
      # - service: >
      - service_template: frontend.set_theme
        data_template:
          name: >
            {{ states('sensor.sun_based_theme') }}
#            {% if trigger.platform == 'sun' %}
#              {{states('input_select.set_sunset_theme') if trigger.event == 'sunset' else
#                states('input_select.set_sunrise_theme') }}
#            {% else %}
#              {{ states('sensor.sun_based_theme') }}
#            {% endif %}
      - condition: template
        value_template: >
          {{ is_state('input_boolean.notify_system', 'on')}}
      - service: notify.system
        data_template:
          title: >
            Ha Main: Sun set Theme
          message: >
            {{ as_timestamp(now()) | timestamp_custom("%X") }}:
            Sun is {{states('sun.sun')}} and Frontend is set to '{{ states('sensor.sun_based_theme') }}'


