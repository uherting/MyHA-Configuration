# ############################################################
#
#  HACS - making life easier
#    for details see https://hacs.xyz/docs/basic/automation
#
# ############################################################

# ############################################################
# HACS updates pending
# ############################################################
- alias: HACS has updates pending
  id: 'HACS has updates pending'
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
#    - service: persistent_notification.create
#      data_template:
#        title: Updates pending in HACS
#        message: >-
#          {% for repo in state_attr(trigger.entity_id, 'repositories') %}
#            **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
#            See <a href="http://192.168.178.31:8123/hacs">here</a>
#          {% endfor %}
    - service: notify.hacs_info
      data_template:
        title: Updates pending in HACS
        message: >-
          {% for repo in state_attr(trigger.entity_id, 'repositories') %}
            **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
          {% endfor %}

# ############################################################
#  END OF FILE
# ############################################################
