##########################################################################################
# Automations
##########################################################################################

# automation:

# ############################################################
# Theme change Current Theme
# ############################################################
- alias: "Theme change Current Theme"
  id: "850c14cb-0613-403b-ba27-3e765c1fa0b6"
  initial_state: true
  trigger:
    platform: state
    entity_id: input_select.theme
  action:
    service: frontend.set_theme
    data_template:
      name: >
        {{ states('input_select.theme') }}

# ############################################################
# Theme change Sun based
# ############################################################
- alias: "Theme change Sun based"
  id: "d3f2163a-7d90-4ebf-96a1-260f63a5398a"
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
    #      - platform: state
    #        entity_id: input_select.set_sunset_theme
    #      - platform: state
    #        entity_id: input_select.set_sunrise_theme
    - platform: state
      entity_id: sensor.sun_based_theme
  #      - platform: sun
  #        event: sunrise
  #      - platform: sun
  #        event: sunset
  #      - platform: state
  #        entity_id: sun.sun
  #        to: above_horizon
  #      - platform: state
  #        entity_id: sun.sun
  #        to: below_horizon
  condition: []
  action:
    # TODO: debug service_template (???)
    #         for details see:
    #           https://www.home-assistant.io/docs/scripts/service-calls/#use-templates-to-decide-which-service-to-call
    # - service: >
    - service: frontend.set_theme
      data:
        name: "{{ states('sensor.sun_based_theme') }}"
      # data_template:
      #   name: {{ states('sensor.sun_based_theme') }}
#            {% if trigger.platform == 'sun' %}
#              {{states('input_select.set_sunset_theme') if trigger.event == 'sunset' else
#                states('input_select.set_sunrise_theme') }}
#            {% else %}
#              {{ states('sensor.sun_based_theme') }}
#            {% endif %}

# - condition: template
#   value_template: "{{ is_state('input_boolean.notify_system', 'on') }}"
# - service: notify.system
#   data_template:
#     title: >
#       HA Main: Sun set Theme
#     message: >
#       {{ as_timestamp(now()) | timestamp_custom("%X") }}:
#       Sun is {{states('sun.sun')}} and Frontend is set to '{{ states('sensor.sun_based_theme') }}'
