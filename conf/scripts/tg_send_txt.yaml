# ############################################################
#
#  Telegram messaging
#
#  Purpose: sending text into a Telegram group or to the systems log
#
#  Attention: not all notification groups as defined in
#  conf/notify.yaml are implemented yet
#
# ############################################################

# --------------------------------------------------------------
# sending a text message to a TG group
# --------------------------------------------------------------
tg_send_txt:
  alias: Send text message via Telegram
  icon: mdi:text
  description: This script sends a text message given as a parameter
  fields:
    msg_title:
      description: "The title of the notification"
      advanced: true
      required: true
      example: "State change"
      default: "default msg title"
      # selector: text
    msg_text:
      description: "The message content"
      advanced: true
      required: true
      example: "The light is on!"
      default: "default msg text"
    msg_receiver:
      description: "The receiver of the message"
      advanced: true
      required: false
      example: "admin"
      default: "admin"
    msg_optional_string:
      description: "An optional string"
      advanced: true
      required: false
      example: "the optional example string"
      default: "not_existant"
    msg_optional_number:
      description: "The receiver of the message"
      advanced: true
      required: false
      example: "0"
      default: "-1"
  mode: queued
  sequence:
    - choose:
        # admin group
        - conditions:
            - condition: template
              value_template: "{{ msg_receiver == 'admin' }}"
          sequence:
            - service: script.log_write2halog
              data:
                lw_message: "Title: *{{ msg_title }}*: {{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                lw_message_receiver: "{{ msg_receiver }}"
                lw_level: error
        # general notification group
        - conditions:
            - condition: template
              value_template: "{{ msg_receiver == 'notify' }}"
          sequence:
            - service: script.log_write2halog
              data:
                lw_message: "Title: *{{ msg_title }}*: {{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                lw_message_receiver: "{{ msg_receiver }}"
                lw_level: warning
            # - service: notify.tg_notification_grp
            #   data_template:
            #     title: "*{{ msg_title }}*"
            #     message: "{{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
        # cams inside group
        - conditions:
            - condition: template
              value_template: "{{ msg_receiver == 'cams_inside' }}"
          sequence:
            - service: script.log_write2halog
              data:
                lw_message: "Title: *{{ msg_title }}*: {{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                lw_message_receiver: "{{ msg_receiver }}"
                lw_level: info
            # - service: notify.tg_cam_entrance_inside_grp
            #   data_template:
            #     title: "*{{ msg_title }}*"
            #     message: "{{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
        # cams outside notification group
        - conditions:
            - condition: template
              value_template: "{{ msg_receiver == 'cams_outside' }}"
          sequence:
            - service: script.log_write2halog
              data:
                lw_message: "Title: *{{ msg_title }}*: {{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                lw_message_receiver: "{{ msg_receiver }}"
                lw_level: info
            # - service: notify.tg_cam_entrance_outside_grp
            #   data_template:
            #     title: "*{{ msg_title }}*"
            #     message: "{{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
      # receiver does not exist
      default:
        - service: script.log_write2halog
          data:
            lw_message: "The receiver of the message does not exist. Title: *{{ msg_title }}*: {{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
            lw_message_receiver: "{{ msg_receiver }}"
            lw_level: error
        # - service: notify.tg_admin_grp
        #   data_template:
        #     title: "receiver '{{ msg_receiver }}' does not exist. Title: *{{ msg_title }}*"
        #     message: "{{ msg_text }} @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
# ############################################################
#  END OF FILE
# ############################################################
