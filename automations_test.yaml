# ############################################################
#
#  HACS - making life easier
#    for details see https://hacs.xyz/docs/basic/automation
#
# ############################################################

# ############################################################
# HACS updates pending
# ############################################################

- alias: ESPHome devices state changed 21 22
  id: 'ESPHome devices state changed 21 22'
  initial_state: true
  trigger:
    platform: event
    event_type: state_changed
  condition:
    condition: and
    conditions:
      # domain is 'binary_sensor'
      - condition: template
        value_template: "{{ trigger.event.data.new_state.domain == 'binary_sensor' }}"

      # entity id starts with 'L0' / 'L2' / 'L9'
      - condition: template
        value_template: >
          {%- set new_state = trigger.event.data.new_state %}
          {%- set old_state = trigger.event.data.old_state %}
          {{ new_state.object_id.startswith('l0') }}

      # entity id ends with the word 'pir01' / 'status'
#      - condition: template
#        value_template: >
#          {%- set new_state = trigger.event.data.new_state %}
#          {{ new_state.object_id.endswith('pir01') or new_state.object_id.endswith('status') }}
  action:
    - service: notify.ha_status_info
      data_template:
        title: ESPHome dev change
        message: Device {{ state_attr(trigger.event.data.entity_id, "friendly_name") }}

#        {{ entity_id|regex_match("\.l0.*pir01$")}}

#      - condition: template
#        value_template: >
#          {%- set new_state = trigger.event.data.new_state %}
#          {{ new_state.object_id.endswith('status') }}

# {{ new_state.object_id.startswith('l0') or new_state.object_id.startswith('l2') or new_state.object_id.startswith('l9') }}



#         {%- set new_state = trigger.event.data.new_state %}
#          {%- set old_state = trigger.event.data.old_state %}
#          {{ new_state.domain == 'binary_sensor' and new_state.object_id.startswith('window') and old_state.state != 'off' }}
#          {{ new_state.object_id.startswith('L0') and  new_state.object_id.endswith('Status') }}
#          {{ new_state.object_id.endswith('pir 01') or new_state.object_id.endswith('pir 01') }}
