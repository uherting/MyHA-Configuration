!function(e){var t={};function o(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,s){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(s,n,function(t){return e[t]}.bind(null,n));return s},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=1)}([function(e){e.exports=JSON.parse('{"name":"badge-card","private":true,"version":"1.0.0","description":"","scripts":{"build":"webpack","watch":"webpack --watch --mode=development","update-card-tools":"npm uninstall card-tools && npm install thomasloven/lovelace-card-tools"},"repository":{"type":"git","url":"github.com:thomasloven/lovelace-badge-card"},"keywords":[],"author":"Thomas Lov√©n","license":"MIT","devDependencies":{"webpack":"^4.41.2","webpack-cli":"^3.3.10"},"dependencies":{"card-tools":"github:thomasloven/lovelace-card-tools"}}')},function(e,t,o){"use strict";o.r(t);const s=customElements.get("home-assistant-main")?Object.getPrototypeOf(customElements.get("home-assistant-main")):Object.getPrototypeOf(customElements.get("hui-view")),n=s.prototype.html,r=s.prototype.css;class i extends s{static get properties(){return{hass:{}}}setConfig(e){this._config=e,this.badges=[],this._addBadges()}updated(e){if(e.has("hass"))for(const e of this.badges)e.hass=this.hass}firstUpdated(){this._addBadges()}async _addBadges(){const e=await window.loadCardHelpers(),t=this.shadowRoot.querySelector("#badges");if(t){for(;t.firstChild;)t.removeChild(t.firstChild);if(this._config.entities||this._config.badges)for(const o of this._config.entities||this._config.badges){const s=e.createBadgeElement("string"==typeof o?{entity:o}:o);this.hass&&(s.hass=this.hass),t.appendChild(s),this.badges.push(s)}}}render(){return n`
    <div id="badges"></div>
    `}static get styles(){return r`
    #badges {
      font-size: 85%;
      text-align: center;
    }
    `}}if(!customElements.get("badge-card")){customElements.define("badge-card",i);const e=o(0);console.info(`%cBADGE_CARD ${e.version} IS INSTALLED`,"color: green; font-weight: bold","")}}]);