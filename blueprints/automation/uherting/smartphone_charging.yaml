# ############################################################
#
#  Smartphone charging via Zigbee plug
#
#   actions based on charging mode: off | charging
#
# ############################################################
blueprint:
  name: Smartphone charging via Zigbee plug
  description: "# Smartphone charging via Zigbee plug\n\n
    Turn on lights or scenes when motion is detected. \nFour
    different scenes can be defined depending on time of day.\n\nFor Details see this
    forum post:\nhttps://community.home-assistant.io/t/yama-yet-another-motion-automation-scenes-ambient-light-and-some-conditions/257062?u=networkingcat\n\nCapabilitys:\n\n
    - Trigger on motion (in fact can be triggered by anything that switches between
    “on” and off\")\n - Wait time for turning off\n - Only run if entity is in desired
    state (optional)\n - Sun elevation check (optional)\n - 4 Scenes for different
    times of day (optional)\n - Ambient support with time frame (optional)\n - Default
    scene when motion stops (optional)\n - “no motion blocker” with user choosable
    state (optional)\n"
  domain: automation
  # source_url: https://gist.github.com/networkingcat/a1876d7e706e07c8bdcf974113940fb8
  source_url: https://github.com/uherting/MyHA-Configuration/blob/master/blueprints/automation/uherting/smartphone_charging.yaml
  input:
    # necessary input for this blueprint
    # charging mode (off | charging)
    charging_mode:
      name: charging mode
      description: The charging mode
    # zigbee_plug_id
    zigbee_plug_id:
      name: zigbee plug id
      description: The zigbee plug id
    # related device charged percentage id
    smartphone_charged_percentage_now:
      name: smartphone charged percentage now
      description: The percentage up to which the smartphone is charged at the moment
    # max charging duration (0 = no end)
    max_charging_duration:
      name: max charging duration
      description: The max charging duration
    # min_charging_percentage
    min_charging_percentage:
      name: min charging percentage
      description: min charging percentage
    # max charging percentage id
    max_charging_percentage:
      name: max charging percentage
      description: The max charging percentage
    # min percentage emergency charging
    min_percentage_emergency_charging:
      name: min percentage emergency charging
      description: min percentage emergency charging
    # max percentage emergency charging
    max_percentage_emergency_charging:
      name: max percentage emergency charging
      description: max percentage emergency charging
    # delayed charging yn
    delayed_charging_yn:
      name: delayed charging yn
      description: delayed charging y/n
    #delayed charging_start time
    delayed_charging_start_time:
      name: delayed charging_start time
      description: delayed charging_start time

# ----------------------- MODE -----------------------
mode: restart

# ------------------- MAX EXCEEDED -------------------
max_exceeded: silent

# --------------------- VARIABLES ---------------------
variables:
  charging_mode: !input charging_mode
  zigbee_plug_id: !input zigbee_plug_id
  related_smartphone_id: !input related_smartphone_id
  smartphone_charged_percentage_now: !input smartphone_charged_percentage_now
  max_charging_duration: !input max_charging_duration
  min_charging_percentage: !input min_charging_percentage
  max_charging_percentage: !input max_charging_percentage
  min_percentage_emergency_charging: !input min_percentage_emergency_charging
  max_percentage_emergency_charging: !input max_percentage_emergency_charging
  delayed_charging_yn: !input delayed_charging_yn
  delayed_charging_start_time: !input delayed_charging_start_time

# --------------------- TRIGGERS ---------------------

# !!! dummy trigger !!!
trigger:
  - platform: time_pattern
    # You can also match on interval. This will match every 5 minutes
    minutes: "/10"

# --------------------- CONDITIONS ---------------------
condition:
  []

  # - condition: template
  #   value_template: "{{ is_state('binary_sensor.sun_dwn_twilight', 'on') }}"

# --------------------- ACTIONS ---------------------
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ charging_mode != 'charging' }}"
        sequence:
          - choose:
              - conditions:
                  - "{{  }}"
                  - condition: time
                    after: !input time_scene_morning
                    before: !input time_scene_day
                sequence:
                  - scene: !input scene_morning
              - conditions:
                  - "{{ charging_mode != 'off'}}"
                  - condition: time
                    after: !input time_scene_day
                    before: !input time_scene_evening
                sequence:
                  - scene: !input scene_day
            default:
              - service: script.log_write2halog
                data:
                  lw_message: "Title: *Smartphone charging via Zigbee plug*: default action was hit (001)) @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                  lw_message_receiver: "{{ msg_receiver }}"
                  lw_level: error
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
        sequence:
          - choose:
              - conditions:
                  - "{{ scene_ambient != 'scene.none' }}"
                  - condition: time
                    after: !input time_scene_ambient_start
                    before: !input time_scene_ambient_end
                sequence:
                  - scene: !input scene_ambient
              - conditions:
                  - "{{ scene_no_motion != 'scene.none' }}"
                sequence:
                  - scene: !input scene_no_motion
            default:
              - service: script.log_write2halog
                data:
                  lw_message: "Title: *Smartphone charging via Zigbee plug*: default action was hit (002)) @ {{ (now().timestamp()) | timestamp_custom('%Y%m%d%H%M%S') }}"
                  lw_message_receiver: "{{ msg_receiver }}"
                  lw_level: error
# ############################################################
#  END OF FILE
# ############################################################
